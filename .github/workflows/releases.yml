name: Releases

on:
  push:
    tags:
      - v*

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Checking out Repository
        uses: actions/checkout@v1
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Zipping build files
        run:  zip -r ./HypixelAPI-all.zip ./README.md ./LICENSE ./build/libs
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN_ME }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Create Artifact
        uses: actions/upload-artifact@v1
        with:
          name: HypixelAPI-all.zip
          path: ./HypixelAPI-all.zip
      - name: Upload Zip of build file
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN_ME }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./HypixelAPI-all.zip
          asset_name: HypixelAPI.zip
          asset_content_type: application/zip
      - name: Upload build jar file
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/HypixelAPI-1.0.0.jar
          asset_name: HypixelAPI-1.0.0.jar
          asset_content_type: application/zip